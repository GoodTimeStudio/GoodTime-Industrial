buildscript {
    repositories {
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        jcenter()
        mavenCentral()
        /*
        maven {
            name = "sponge"
            url = "http://repo.spongepowered.org/maven"
        }
        */
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        //classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
//apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "dev.0.6" + getBuildNumber()
group= "com.mcgoodtime.productionline"
archivesBaseName = "ProductionLine"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20171003-1.12'
    
    // Default run configurations.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to"
    }
    maven {
        name = "sponge"
        url = "http://repo.spongepowered.org/maven"
    }
	maven {
		name = "jei"
		url = "http://dvs1.progwml6.com/files/maven"
	}
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'
    //compile ('org.spongepowered:mixin:0.6.+') {
    //    exclude module: 'launchwrapper'
    //}
}

jar {
    manifest {
		attributes (
            "Specification-Title": "Production Line",
            "Specification-Vendor": "GoodTime Studio",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"GoodTime Studio",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		)
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

/*
mixin {
    // Specify "notch" or "searge" here
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.forge.refmap.json"
}
*/

compileJava {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

static def getBuildNumber() {
	return "$System.env.BUILD_NUMBER" != "null" ? "." + Integer.parseInt("$System.env.BUILD_NUMBER") : ""
}
